"use client"

import { useState, useEffect } from "react"
import { generateSummary, type SummaryResult } from "./actions/summarize"
import { createCheckoutSession } from "./actions/stripe"
import { getUsageData, incrementUsage, canUseService } from "../utils/usageTracker"

const downloadSummary = (summary: SummaryResult, usageData: any) => {
  if (!usageData.isPremium) return

  const timestamp = new Date().toLocaleString("fi-FI")
  const contentTypeMap = {
    meeting: "Kokousmuistio",
    email: "S√§hk√∂posti",
    document: "Dokumentti",
    general: "Yleinen teksti",
  }

  let content = `SUMMARI UNLIMITED - YHTEENVETO\n`
  content += `Luotu: ${timestamp}\n`
  content += `Tyyppi: ${contentTypeMap[summary.contentType as keyof typeof contentTypeMap] || "Tuntematon"}\n`
  content += `${"=".repeat(50)}\n\n`

  content += `TIIVISTELM√Ñ:\n${summary.summary}\n\n`

  content += `P√Ñ√ÑKOHDAT:\n`
  summary.keyPoints.forEach((point, i) => {
    content += `${i + 1}. ${point}\n`
  })
  content += `\n`

  content += `TODO-TEHT√ÑV√ÑT:\n`
  summary.actionItems.forEach((action, i) => {
    content += `‚òê ${action}\n`
  })
  content += `\n`

  if (summary.deadlines && summary.deadlines.length > 0) {
    content += `DEADLINET:\n`
    summary.deadlines.forEach((deadline) => {
      content += `üìÖ ${deadline.deadline} - ${deadline.task} (${deadline.person})\n`
    })
    content += `\n`
  }

  if (summary.pendingDecisions && summary.pendingDecisions.length > 0) {
    content += `AVOIMET P√Ñ√ÑT√ñKSET:\n`
    summary.pendingDecisions.forEach((decision) => {
      content += `‚ùì ${decision}\n`
    })
    content += `\n`
  }

  if (summary.responseTemplate) {
    content += `VASTAUSLUONNOS:\n${summary.responseTemplate}\n\n`
  }

  content += `${"=".repeat(50)}\n`
  content += `Luotu Summari Unlimited -palvelulla\n`
  content += `summari.fi\n`

  const blob = new Blob([content], { type: "text/plain;charset=utf-8" })
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = `summari-yhteenveto-${new Date().toISOString().split("T")[0]}.txt`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

export default function HomePage() {
  const [content, setContent] = useState("")
  const [result, setResult] = useState<SummaryResult | null>(null)
  const [isLoading, setIsLoading] = useState(false)
  const [usageData, setUsageData] = useState(getUsageData())
  const [showPremiumBanner, setShowPremiumBanner] = useState(false)
  const [showPricing, setShowPricing] = useState(false)
  const [isProcessingPayment, setIsProcessingPayment] = useState(false)
  const [selectedTemplate, setSelectedTemplate] = useState<"auto" | "meeting" | "email" | "project">("auto")
  const [liveAnalysis, setLiveAnalysis] = useState({ wordCount: 0, estimatedTime: 0, detectedElements: [] as string[] })

  useEffect(() => {
    setUsageData(getUsageData())
  }, [])

  const scrollToApp = () => {
    const appSection = document.getElementById("app-section")
    if (appSection) {
      appSection.scrollIntoView({
        behavior: "smooth",
        block: "start",
      })
      // Fokusoi textarea hetken kuluttua
      setTimeout(() => {
        const textarea = document.querySelector("textarea")
        if (textarea) {
          textarea.focus()
        }
      }, 800)
    }
  }

  const handleSubmit = async () => {
    if (!content?.trim()) return

    const { allowed, remaining } = canUseService()

    if (!allowed && !usageData.isPremium) {
      setShowPremiumBanner(true)
      return
    }

    setIsLoading(true)
    try {
      // K√§yt√§ valittua templatea
      const summary = await generateSummary(content, selectedTemplate)
      setResult(summary)

      if (!usageData.isPremium) {
        const newUsageData = incrementUsage()
        setUsageData(newUsageData)
      }
    } catch (error) {
      console.error("Error:", error)
      const errorMessage = error instanceof Error ? error.message : "Tuntematon virhe"
      setResult({
        summary: `Virhe yhteenvedon luomisessa: ${errorMessage}`,
        keyPoints: ["Kokeile lyhent√§√§ teksti√§", "Varmista ett√§ teksti on selke√§√§ suomea"],
        actionItems: ["Muokkaa teksti√§ ja yrit√§ uudelleen"],
      })
    } finally {
      setIsLoading(false)
    }
  }

  useEffect(() => {
    const words = content
      .trim()
      .split(/\s+/)
      .filter((word) => word.length > 0).length
    const estimatedTime = Math.max(3, Math.ceil(words / 100)) // ~100 sanaa sekunnissa

    const detectedElements = []
    if (content.toLowerCase().includes("todo") || content.toLowerCase().includes("teht√§v√§")) {
      detectedElements.push("TODO-teht√§vi√§")
    }
    if (content.toLowerCase().includes("deadline") || content.toLowerCase().includes("menness√§")) {
      detectedElements.push("Deadlineja")
    }
    if (content.toLowerCase().includes("p√§√§t√∂s") || content.toLowerCase().includes("sovittiin")) {
      detectedElements.push("P√§√§t√∂ksi√§")
    }
    if (content.toLowerCase().includes("@") || content.toLowerCase().includes("l√§hett√§j√§")) {
      detectedElements.push("S√§hk√∂posti")
    }
    if (content.toLowerCase().includes("kokous") || content.toLowerCase().includes("osallistuj")) {
      detectedElements.push("Kokousmuistio")
    }

    setLiveAnalysis({ wordCount: words, estimatedTime, detectedElements })
  }, [content])

  const handlePremiumPurchase = async () => {
    setIsProcessingPayment(true)
    try {
      const { url, error } = await createCheckoutSession()

      if (error) {
        alert(`‚ùå ${error}`)
        return
      }

      if (url) {
        window.location.href = url
      }
    } catch (error) {
      alert("‚ùå Maksu ep√§onnistui. Yrit√§ uudelleen.")
    } finally {
      setIsProcessingPayment(false)
    }
  }

  const handlePremiumActivated = () => {
    setUsageData(getUsageData())
    setShowPremiumBanner(false)
    setShowPricing(false)
  }

  const { allowed, remaining } = canUseService()

  const exampleText = `Hei, t√§ss√§ olisi nyt v√§h√§n pidemp√§√§ raporttia meid√§n viimeviikkoisesta markkinointikokouksesta, jota venytettiin muuten lopulta 1,5 tuntia, koska osalla oli niin paljon kommentoitavaa.

Ensinn√§kin puhuttiin siit√§, ett√§ meid√§n nykyinen mainoskampanja ei ole tuottanut toivottuja tuloksia, erityisesti LinkedInin kautta tulleet liidit ovat olleet v√§h√§isi√§ ja niiss√§ konversioaste matala, joten siihen pit√§isi ehk√§ tehd√§ jotain uudelleen kohdistusta tai ainakin mietti√§ viestien selkeytt√§mist√§. Samalla nousi esiin, ett√§ tiimill√§ ei ole viel√§ kunnollista yleis√∂segmentointia k√§yt√∂ss√§, mik√§ osaltaan selitt√§√§, miksi viestit eiv√§t ehk√§ resonoi oikein ‚Äì t√§st√§ pyydettiin Jenni√§ tekem√§√§n alustava suunnitelma seuraavaan kokoukseen menness√§.

Sitten siirryttiin puhumaan somekanavien aktiivisuudesta. On kuulemma paljon hajontaa siin√§, kuka milloin julkaisee mit√§kin, eik√§ ole selke√§√§ aikataulua tai linjaa, joten p√§√§tettiin kokeilla 2 viikon sis√§ll√§ uutta julkaisukalenteria, joka jaetaan kaikille Slackissa. Kukaan ei tosin viel√§ ottanut vastuuta sen laatimisesta, mutta Timo lupasi kysy√§ Lottaa, ehtisik√∂ h√§n.

My√∂s verkkosivujen analytiikka otettiin esille ‚Äì siell√§ n√§kyi piikki viime viikolla, mahdollisesti uuden blogitekstin ansiosta, mutta ei viel√§ varmaa. Joku ehdotti, ett√§ lis√§t√§√§n UTM-tageja kaikkiin linkkeihin, ett√§ tiedet√§√§n, mist√§ liikenne tarkalleen tulee. Jatkop√§√§t√∂s: Julia katsoo analytiikan asetukset kuntoon ennen torstaita.

Loppupuolella viel√§ k√§ytiin l√§pi ensi kuun webinaarin valmistelua. Ilmoittautumisia on tullut toistaiseksi v√§h√§n, vaikka markkinointia on tehty ‚Äì ehk√§ kutsut ei ole menneet oikeille ihmisille? Sovittiin, ett√§ testataan eri otsikoita A/B-testill√§ s√§hk√∂posteissa, ja t√§m√§ hoidetaan Mailchimpin kautta.

Viimeinen keskustelu k√§ytiin budjetista. Kaikki toimet n√§ytt√§isiv√§t pysyv√§n raameissa, mutta Mari nosti esiin, ett√§ jos halutaan lis√§√§ mainosrahaa seuraavaan kampanjaan, niin siit√§ pit√§√§ nyt tehd√§ esitys talouspuolelle, ja mieluiten jo ennen kuun vaihdetta.

Seuraava kokous on ensi viikon keskiviikkona klo 13:00.`

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center">
      <div className="text-center">
        <h1 className="text-6xl font-bold text-gray-900 mb-4">Summari</h1>
        <p className="text-xl text-gray-600">√Ñlykk√§√§t yhteenvedot suomeksi</p>
        <div className="mt-8 p-4 bg-green-100 rounded-lg">
          <p className="text-green-800 font-semibold">‚úÖ Sivu toimii!</p>
        </div>
      </div>
    </div>
  )
}
